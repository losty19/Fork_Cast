name: Run Tests

on:
  push:
    branches:
      - development
      - main
  pull_request:
    branches:
      - development
      - main

permissions:
  contents: read
  id-token: write
  actions: write
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Node.js
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install --silent

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Run Jest tests with coverage
        env:
          SPOONACULAR_API_KEY: ${{ secrets.SPOONACULAR_API_KEY }}
        run: npm test -- --coverage

      - name: Upload test results
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: test-results
          path: test-results/

      - name: Upload coverage report
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: coverage
          path: coverage/

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

  #     - name: Set up Node.js
  #       uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
  #       with:
  #         node-version: 18
  #         cache: 'npm'

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v4.0.0
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Install backend dependencies
  #       run: npm install --cache .npm --prefer-offline

  #     - name: Deploy backend
  #       env:
  #         AMPLIFY_APP_ID: ${{ secrets.AWS_APP_ID }}
  #         AWS_BRANCH: ${{ github.ref_name }}
  #         AWS_REGION: ${{ secrets.AWS_REGION }}
  #         AMPLIFY_ENVIRONMENT: ${{ github.ref_name }}
  #       run: npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AMPLIFY_APP_ID

  #     - name: Build frontend
  #       run: npm run build
      
  #     - name: Upload build artifacts
  #       uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
  #       with:
  #         name: dist
  #         path: dist/**/*
      
  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           .npm
  #           node_modules
  #         key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-npm-

      # - name: Upload Amplify build logs
      #   uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
      #   with:
      #     name: amplify-build-logs
      #     path: amplify/backend/build.log
